# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQube_ADD_manual'
    scannerMode: 'MSBuild'
    projectKey: 'Azure-Devops'
    projectName: 'Azure-Devops'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'
- script: |
    npm install
    npm run build
  displayName: 'npm install and build' 
- task: AzureWebApp@1
  inputs:
    azureSubscription: '****Purposely Omitted****'
    appType: 'webAppLinux'
    appName: 'dcoderr-frontend'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip' 

<br>trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'
- script: |
    npm install
    npm run build
  displayName: 'npm install and build' 
- task: AzureWebApp@1
  inputs:
    azureSubscription: '****Purposely Omitted****'
    appType: 'webAppLinux'
    appName: 'dcoderr-frontend'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip' 

<br>

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '500'